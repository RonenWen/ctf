const nt="ENTRIES",V="KEYS",T="VALUES",F="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case T:return this.value();case V:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return W(e,t,s,n,i,1,o,""),n},W=(e,t,s,n,o,u,i,r)=>{const h=u*i;t:for(const c of e.keys())if(c===F){const d=o[h-1];d<=s&&n.set(r,[e.get(c),d])}else{let d=u;for(let l=0;l<c.length;++l,++d){const p=c[l],f=i*d,g=f-i;let a=o[f];const m=Math.max(0,d-s-1),y=Math.min(i-1,d+s);for(let _=m;_<y;++_){const b=p!==t[_],z=o[g+_]+ +b,A=o[g+_+1]+1,w=o[f+_]+1,L=o[f+_+1]=Math.min(z,A,w);L<a&&(a=L)}if(a>s)continue t}W(e.get(c),t,s,n,o,d,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==F&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ut(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=I(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=I(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,V)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,M(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);let o=n.get(F);return o===void 0&&n.set(F,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},I=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return I(e.get(s),t.slice(s.length))},M=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==F&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const h=e.get(u);if(r===u.length)e=h;else{const c=new Map;c.set(u.slice(r),h),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ut=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)R(n);else if(s.size===1){const[o,u]=s.entries().next().value;$(n,o,u)}}},R=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)R(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==F&&$(e.slice(0,-1),n,o)}},$=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},rt=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",q="and",ct="and_not",lt=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},G=({score:e},{score:t})=>t-e,ht=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},N=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,dt={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),P(n.terms,u)}}return e},[q]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);P(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[ct]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,o,u)=>{const{k:i,b:r,d:h}=u;return Math.log(1+(s-t+.5)/(t+.5))*(h+e*(i+1)/(e+i*(1-r+r*n/o)))},ft=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},gt=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,ht),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},pt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(rt),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof(console==null?void 0:console[e])=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},Ft={combineWith:q,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},yt={..._t,...U},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(dt[s])||new Map},B=(e,t,s,n,o,u,i,r,h=new Map)=>{if(o==null)return h;for(const c of Object.keys(u)){const d=u[c],l=e._fieldIds[c],p=o.get(l);if(p==null)continue;let f=p.size;const g=e._avgFieldLength[l];for(const a of p.keys()){if(!e._documentIds.has(a)){gt(e,l,a,s),f-=1;continue}const m=i?i(e._documentIds.get(a),s,e._storedFields.get(a)):1;if(!m)continue;const y=p.get(a),_=e._fieldLength.get(a)[l],b=at(y,f,e._documentCount,_,g,r),z=n*d*m*b,A=h.get(a);if(A){A.score+=z,lt(A.terms,t);const w=N(A.match,s);w?w.push(c):A.match[s]=[c]}else h.set(a,{score:z,terms:[t],match:{[s]:[c]}})}}return h},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((a,m)=>({...a,[m]:N(n.boost,m)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:h}=n,{fuzzy:c,prefix:d}={...J.weights,...i},l=e._index.get(t.term),p=B(e,t.term,t.term,1,l,o,u,h);let f,g;if(t.prefix&&(f=e._index.atPrefix(t.term)),t.fuzzy){const a=t.fuzzy===!0?.2:t.fuzzy,m=a<1?Math.min(r,Math.round(t.term.length*a)):a;m&&(g=e._index.fuzzyGet(t.term,m))}if(f)for(const[a,m]of f){const y=a.length-t.term.length;if(!y)continue;g==null||g.delete(a);const _=d*a.length/(a.length+.3*y);B(e,t.term,a,_,m,o,u,h,p)}if(g)for(const a of g.keys()){const[m,y]=g.get(a);if(!y)continue;const _=c*a.length/(a.length+y);B(e,t.term,a,_,m,o,u,h,p)}return p},X=(e,t,s={})=>{if(typeof t!="string"){const d={...s,...t,queries:void 0},l=t.queries.map(p=>X(e,p,d));return Y(l,d.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:h}=i,c=r(t).flatMap(d=>h(d)).filter(d=>!!d).map(ft(i)).map(d=>At(e,d,i));return Y(c,i.combineWith)},K=(e,t,s={})=>{const n=X(e,t,s),o=[];for(const[u,{score:i,terms:r,match:h}]of n){const c=r.length,d={id:e._documentIds.get(u),score:i*c,terms:Object.keys(h),match:h};Object.assign(d,e._storedFields.get(u)),(s.filter==null||s.filter(d))&&o.push(d)}return o.sort(G),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of K(e,t,s)){const r=i.join(" "),h=n.get(r);h!=null?(h.score+=u,h.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:h}]of n)o.push({suggestion:u,terms:r,score:i/h});return o.sort(G),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if((t==null?void 0:t.fields)==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...pt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...Ft,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:h,serializationVersion:c},d)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const l=new Et(d);l._documentCount=t,l._nextId=s,l._documentIds=k(n),l._idToShortId=new Map,l._fieldIds=o,l._fieldLength=k(u),l._avgFieldLength=i,l._storedFields=k(r),l._dirtCount=h||0,l._index=new C;for(const[p,f]of l._documentIds)l._idToShortId.set(f,p);for(const[p,f]of e){const g=new Map;for(const a of Object.keys(f)){let m=f[a];c===1&&(m=m.ds),g.set(parseInt(a,10),k(m))}l._index.set(p,g)}return l},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,d=!1)=>{let l="";i===0?l=c.length>20?`… ${c.slice(-20)}`:c:d?l=c.length+i>100?`${c.slice(0,100-i)}… `:c:l=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,l&&o.push(l),i+=l.length,d||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let h=s.indexOf(n,u);if(h===-1)return null;for(;h>=0;){const c=h+n.length;if(r(e.slice(u,h)),u=c,i>100)break;h=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return K(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(o=>{const{id:u,terms:i,score:r}=o,h=u.includes("@"),c=u.includes("#"),[d,l]=u.split(/[#@]/),{contents:p}=n[d]??={title:"",contents:[]};if(h)p.push([{type:"customField",key:d,index:l,display:i.map(f=>o.c.map(g=>j(g,f))).flat().filter(f=>f!==null)},r]);else{const f=i.map(g=>j(o.h,g)).filter(g=>g!==null);if(f.length&&p.push([{type:c?"heading":"title",key:d,...c&&{anchor:l},display:f},r]),"t"in o)for(const g of o.t){const a=i.map(m=>j(g,m)).filter(m=>m!==null);a.length&&p.push([{type:"text",key:d,...c&&{anchor:l},display:a},r])}}}),Q(n).sort(([,o],[,u])=>"max"==="total"?xt(o,u):kt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=it(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Ct(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/\":{\"documentCount\":22,\"nextId\":22,\"documentIds\":{\"0\":\"v-184f4da6\",\"1\":\"v-af16cb16\",\"2\":\"v-14f4796a\",\"3\":\"v-d440f426\",\"4\":\"v-d440f426#目录\",\"5\":\"v-d440f426#扫描工具\",\"6\":\"v-744e6dd4\",\"7\":\"v-7ff768e8\",\"8\":\"v-7ff768e8#简介\",\"9\":\"v-7ff768e8#基本使用\",\"10\":\"v-7ff768e8#常见参数\",\"11\":\"v-7ff768e8#案例\",\"12\":\"v-7ff768e8#ftp破解\",\"13\":\"v-7ff768e8#mysql破解\",\"14\":\"v-7ff768e8#ssh破解\",\"15\":\"v-7ff768e8#http协议中post请求破解\",\"16\":\"v-86271a5e\",\"17\":\"v-86271a5e#目录\",\"18\":\"v-6609a0f6\",\"19\":\"v-6609a0f6#目录\",\"20\":\"v-43d1b26c\",\"21\":\"v-43d1b26c#御剑的简介\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,2],\"1\":[1,1],\"2\":[1,1],\"3\":[1,1],\"4\":[1],\"5\":[1,1],\"6\":[1,1],\"7\":[1],\"8\":[1,70],\"9\":[1],\"10\":[1,98],\"11\":[1],\"12\":[1,12],\"13\":[1,14],\"14\":[1,18],\"15\":[1,24],\"16\":[1,1],\"17\":[1,5],\"18\":[1,1],\"19\":[1,5],\"20\":[1],\"21\":[1,2]},\"averageFieldLength\":[1,13.606611570247933],\"storedFields\":{\"0\":{\"h\":\"whoami\",\"t\":[\"一个CTFer，来自CCSFU\"]},\"1\":{\"h\":\"Crypto\",\"t\":[\"这里是Crypto做题记录\"]},\"2\":{\"h\":\"Misc\",\"t\":[\"这里是Misc做题记录\"]},\"3\":{\"h\":\"工具\",\"t\":[\"这里有常用的工具的使用方法和简介\"]},\"4\":{\"h\":\"目录\"},\"5\":{\"h\":\"扫描工具\",\"t\":[\"御剑\"]},\"6\":{\"h\":\"Web\",\"t\":[\"这里是web做题记录\"]},\"7\":{\"h\":\"Hydra\"},\"8\":{\"h\":\"简介\",\"t\":[\"Hydra，俗称九头蛇，是一款非常强大的暴力破解工具，支持多种服务协议的账号和密码进行爆破，包括Web登录、数据库、SSH、FTP等服务，支持Linux、Windows、Mac平台安装。\",\"它是由著名的黑客组织THC开发的一款开源暴力破解工具。Hydra是一个验证性质的工具，主要目的是：展示安全研究人员从远程获取一个系统认证权限。\",\"目前该工具支持以下协议的爆破：\",\"AFP，Cisco AAA，Cisco身份验证，Cisco启用，CVS，Firebird，FTP，HTTP-FORM-GET，HTTP-FORM-POST，HTTP-GET，HTTP-HEAD，HTTP-PROXY，HTTPS-FORM- GET，HTTPS-FORM-POST，HTTPS-GET，HTTPS-HEAD，HTTP-Proxy，ICQ，IMAP，IRC，LDAP，MS-SQL，MYSQL，NCP，NNTP，Oracle Listener，Oracle SID，Oracle，PC-Anywhere， PCNFS，POP3，POSTGRES，RDP，Rexec，Rlogin，Rsh，SAP / R3，SIP，SMB，SMTP，SMTP枚举，SNMP，SOCKS5，SSH（v1和v2），Subversion，Teamspeak（TS2），Telnet，VMware-Auth ，VNC和XMPP。\"]},\"9\":{\"h\":\"基本使用\"},\"10\":{\"h\":\"常见参数\",\"t\":[\"Hydra是一个命令行工具，所有的操作都是通过命令和参数实现的，如下就是最常见的Hydra暴力破解的参数：\",\"选项\",\"说明\",\"-R\",\"继续上一次破解\",\"-I\",\"忽略现有还原文件（不等待10秒）\",\"-s PORT\",\"指定默认端口\",\"-l LOGIN\",\"指定破解登录用户名\",\"-L FILE\",\"使用文件指定多个用户名\",\"-p PASS\",\"指定密码\",\"-P FILE\",\"指定密码字典\",\"-x MIN:MAX:CHARSET\",\"密码暴力生成\",\"-y\",\"禁止在暴力破解中使用符号\",\"-r\",\"对选项-x使用非随机方法\",\"-e nsr\",\"n：空密码试探，s：使用指定用户和密码试探。\",\"-u\",\"循环用户\",\"-C FILE\",\"冒号分隔用户名密码：“login:pass” 格式\",\"-M FILE\",\"要攻击的服务器列表，每行一个条目，’:'指定端口\",\"-o FILE\",\"将找到的登录/密码写入文件\",\"-b FORMAT\",\"指定-o输出格式，默认text,可选json, jsonv1\",\"-f / -F\",\"找到用户名/密码后中止破解，-f:每个主机，-F：所有\",\"-t TASKS\",\"每个主机并行线程数，默认16\",\"-T TASKS\",\"所有并行线程数，默认64\",\"-w / -W TIME\",\"最大等待响应时间\",\"-c TIME\",\"所有进程每次尝试登录等待时间\",\"-4 / -6\",\"IPv4(默认)/IPv6地址\",\"-v / -V / -d\",\"详细日志模式/每次尝试仅显示用户名密码/调试模式\",\"-k\",\"不重做失败的尝试（适用于-M批量扫描）\",\"-q\",\"不要打印错误连接消息\",\"-U\",\"服务模块详细使用信息\"]},\"11\":{\"h\":\"案例\"},\"12\":{\"h\":\"ftp破解\",\"t\":[\"hydra -l allen -P e:\\\\aa.txt ftp://127.0.0.1 \"]},\"13\":{\"h\":\"mysql破解\",\"t\":[\"-e nsr :指定可以尝试空密码。\",\"hydra -l root -P e:\\\\aa.txt -e nsr 127.0.0.1 mysql \"]},\"14\":{\"h\":\"ssh破解\",\"t\":[\"hydra -l root -p 123456 120.26.12.53 ssh hydra -l root -p 123456 ssh://120.26.12.53 hydra -l root -P e:\\\\aa.txt -e nsr ssh://120.26.12.53 hydra -l root -P e:\\\\aa.txt -e nsr -vV ssh://120.26.12.53 // -v参数显示详细的暴力破解的过程。 \"]},\"15\":{\"h\":\"HTTP协议中POST请求破解\",\"t\":[\"hydra -l <username> -P <wordlist> 10.10.146.53 http-post-form \\\"/:username=^USER^&password=^PASS^:F=incorrect\\\" -V \",\"选项解释：\",\"-l 指定单个的用户名\",\"-L 用户名文件\",\"-p 密码列表文件\",\"http-post-form 输入提交表单的格式以及字段的名称\",\"F 用户名密码错误时返回页面的含有的词汇\"]},\"16\":{\"h\":\"暴力破解\",\"t\":[\"这里有常用的工具的使用方法和简介\"]},\"17\":{\"h\":\"目录\",\"t\":[\"Markdown 展示\",\"页面展示\",\"禁用展示\",\"加密展示\"]},\"18\":{\"h\":\"扫描\",\"t\":[\"这里有常用的工具的使用方法和简介\"]},\"19\":{\"h\":\"目录\",\"t\":[\"Markdown 展示\",\"页面展示\",\"禁用展示\",\"加密展示\"]},\"20\":{\"h\":\"御剑\"},\"21\":{\"h\":\"御剑的简介\",\"t\":[\"没啥好介绍的，用法也非常的简单\"]}},\"dirtCount\":0,\"index\":[[\"用法也非常的简单\",{\"1\":{\"21\":1}}],[\"用户名密码错误时返回页面的含有的词汇\",{\"1\":{\"15\":1}}],[\"用户名文件\",{\"1\":{\"15\":1}}],[\"没啥好介绍的\",{\"1\":{\"21\":1}}],[\"扫描\",{\"0\":{\"18\":1}}],[\"扫描工具\",{\"0\":{\"5\":1}}],[\"加密展示\",{\"1\":{\"17\":1,\"19\":1}}],[\"禁用展示\",{\"1\":{\"17\":1,\"19\":1}}],[\"禁止在暴力破解中使用符号\",{\"1\":{\"10\":1}}],[\"页面展示\",{\"1\":{\"17\":1,\"19\":1}}],[\"展示\",{\"1\":{\"17\":1,\"19\":1}}],[\"展示安全研究人员从远程获取一个系统认证权限\",{\"1\":{\"8\":1}}],[\"暴力破解\",{\"0\":{\"16\":1}}],[\"输入提交表单的格式以及字段的名称\",{\"1\":{\"15\":1}}],[\"<wordlist>\",{\"1\":{\"15\":1}}],[\"<username>\",{\"1\":{\"15\":1}}],[\"53\",{\"1\":{\"14\":4,\"15\":1}}],[\"26\",{\"1\":{\"14\":4}}],[\"146\",{\"1\":{\"15\":1}}],[\"10\",{\"1\":{\"15\":2}}],[\"12\",{\"1\":{\"14\":4}}],[\"120\",{\"1\":{\"14\":4}}],[\"123456\",{\"1\":{\"14\":2}}],[\"127\",{\"1\":{\"12\":1,\"13\":1}}],[\"1\",{\"1\":{\"12\":1,\"13\":1}}],[\"0\",{\"1\":{\"12\":2,\"13\":2}}],[\"案例\",{\"0\":{\"11\":1}}],[\"服务模块详细使用信息\",{\"1\":{\"10\":1}}],[\"q\",{\"1\":{\"10\":1}}],[\"适用于\",{\"1\":{\"10\":1}}],[\"不要打印错误连接消息\",{\"1\":{\"10\":1}}],[\"不重做失败的尝试\",{\"1\":{\"10\":1}}],[\"不等待10秒\",{\"1\":{\"10\":1}}],[\"k\",{\"1\":{\"10\":1}}],[\"调试模式\",{\"1\":{\"10\":1}}],[\"详细日志模式\",{\"1\":{\"10\":1}}],[\"d\",{\"1\":{\"10\":1}}],[\"6\",{\"1\":{\"10\":1}}],[\"4\",{\"1\":{\"10\":1}}],[\"最大等待响应时间\",{\"1\":{\"10\":1}}],[\"默认\",{\"1\":{\"10\":1}}],[\"默认64\",{\"1\":{\"10\":1}}],[\"默认16\",{\"1\":{\"10\":1}}],[\"默认text\",{\"1\":{\"10\":1}}],[\"所有进程每次尝试登录等待时间\",{\"1\":{\"10\":1}}],[\"所有并行线程数\",{\"1\":{\"10\":1}}],[\"所有\",{\"1\":{\"10\":1}}],[\"所有的操作都是通过命令和参数实现的\",{\"1\":{\"10\":1}}],[\"每次尝试仅显示用户名密码\",{\"1\":{\"10\":1}}],[\"每个主机并行线程数\",{\"1\":{\"10\":1}}],[\"每个主机\",{\"1\":{\"10\":1}}],[\"每行一个条目\",{\"1\":{\"10\":1}}],[\"找到用户名\",{\"1\":{\"10\":1}}],[\"jsonv1\",{\"1\":{\"10\":1}}],[\"可选json\",{\"1\":{\"10\":1}}],[\"b\",{\"1\":{\"10\":1}}],[\"密码列表文件\",{\"1\":{\"15\":1}}],[\"密码后中止破解\",{\"1\":{\"10\":1}}],[\"密码写入文件\",{\"1\":{\"10\":1}}],[\"密码暴力生成\",{\"1\":{\"10\":1}}],[\"将找到的登录\",{\"1\":{\"10\":1}}],[\"o输出格式\",{\"1\":{\"10\":1}}],[\"o\",{\"1\":{\"10\":1}}],[\"oracle\",{\"1\":{\"8\":3}}],[\"要攻击的服务器列表\",{\"1\":{\"10\":1}}],[\"格式\",{\"1\":{\"10\":1}}],[\"冒号分隔用户名密码\",{\"1\":{\"10\":1}}],[\"循环用户\",{\"1\":{\"10\":1}}],[\"username=^user^\",{\"1\":{\"15\":1}}],[\"u\",{\"1\":{\"10\":2}}],[\"使用指定用户和密码试探\",{\"1\":{\"10\":1}}],[\"使用文件指定多个用户名\",{\"1\":{\"10\":1}}],[\"空密码试探\",{\"1\":{\"10\":1}}],[\"e\",{\"1\":{\"10\":1,\"12\":1,\"13\":3,\"14\":4}}],[\"对选项\",{\"1\":{\"10\":1}}],[\"y\",{\"1\":{\"10\":1}}],[\"x使用非随机方法\",{\"1\":{\"10\":1}}],[\"x\",{\"1\":{\"10\":1}}],[\"指定单个的用户名\",{\"1\":{\"15\":1}}],[\"指定可以尝试空密码\",{\"1\":{\"13\":1}}],[\"指定\",{\"1\":{\"10\":1}}],[\"指定端口\",{\"1\":{\"10\":1}}],[\"指定密码字典\",{\"1\":{\"10\":1}}],[\"指定密码\",{\"1\":{\"10\":1}}],[\"指定破解登录用户名\",{\"1\":{\"10\":1}}],[\"指定默认端口\",{\"1\":{\"10\":1}}],[\"忽略现有还原文件\",{\"1\":{\"10\":1}}],[\"继续上一次破解\",{\"1\":{\"10\":1}}],[\"说明\",{\"1\":{\"10\":1}}],[\"选项解释\",{\"1\":{\"15\":1}}],[\"选项\",{\"1\":{\"10\":1}}],[\"如下就是最常见的hydra暴力破解的参数\",{\"1\":{\"10\":1}}],[\"常见参数\",{\"0\":{\"10\":1}}],[\"基本使用\",{\"0\":{\"9\":1}}],[\"v参数显示详细的暴力破解的过程\",{\"1\":{\"14\":1}}],[\"vv\",{\"1\":{\"14\":1}}],[\"v\",{\"1\":{\"10\":2,\"15\":1}}],[\"vnc和xmpp\",{\"1\":{\"8\":1}}],[\"vmware\",{\"1\":{\"8\":1}}],[\"v1和v2\",{\"1\":{\"8\":1}}],[\"txt\",{\"1\":{\"12\":1,\"13\":1,\"14\":2}}],[\"time\",{\"1\":{\"10\":2}}],[\"tasks\",{\"1\":{\"10\":2}}],[\"t\",{\"1\":{\"10\":2}}],[\"telnet\",{\"1\":{\"8\":1}}],[\"teamspeak\",{\"1\":{\"8\":1}}],[\"ts2\",{\"1\":{\"8\":1}}],[\"root\",{\"1\":{\"13\":1,\"14\":4}}],[\"r\",{\"1\":{\"10\":2}}],[\"r3\",{\"1\":{\"8\":1}}],[\"rsh\",{\"1\":{\"8\":1}}],[\"rlogin\",{\"1\":{\"8\":1}}],[\"rexec\",{\"1\":{\"8\":1}}],[\"rdp\",{\"1\":{\"8\":1}}],[\"login\",{\"1\":{\"10\":2}}],[\"l\",{\"1\":{\"10\":2,\"12\":1,\"13\":1,\"14\":4,\"15\":3}}],[\"listener\",{\"1\":{\"8\":1}}],[\"ldap\",{\"1\":{\"8\":1}}],[\"n\",{\"1\":{\"10\":1}}],[\"nsr\",{\"1\":{\"10\":1,\"13\":2,\"14\":2}}],[\"nntp\",{\"1\":{\"8\":1}}],[\"ncp\",{\"1\":{\"8\":1}}],[\"s\",{\"1\":{\"10\":2}}],[\"subversion\",{\"1\":{\"8\":1}}],[\"socks5\",{\"1\":{\"8\":1}}],[\"snmp\",{\"1\":{\"8\":1}}],[\"smtp枚举\",{\"1\":{\"8\":1}}],[\"smtp\",{\"1\":{\"8\":1}}],[\"smb\",{\"1\":{\"8\":1}}],[\"sip\",{\"1\":{\"8\":1}}],[\"sid\",{\"1\":{\"8\":1}}],[\"sap\",{\"1\":{\"8\":1}}],[\"sql\",{\"1\":{\"8\":1}}],[\"ssh破解\",{\"0\":{\"14\":1}}],[\"ssh\",{\"1\":{\"8\":2,\"14\":4}}],[\"ipv6地址\",{\"1\":{\"10\":1}}],[\"ipv4\",{\"1\":{\"10\":1}}],[\"i\",{\"1\":{\"10\":1}}],[\"irc\",{\"1\":{\"8\":1}}],[\"imap\",{\"1\":{\"8\":1}}],[\"icq\",{\"1\":{\"8\":1}}],[\"password=^pass^\",{\"1\":{\"15\":1}}],[\"pass\",{\"1\":{\"10\":2}}],[\"p\",{\"1\":{\"10\":2,\"12\":1,\"13\":1,\"14\":4,\"15\":2}}],[\"port\",{\"1\":{\"10\":1}}],[\"pop3\",{\"1\":{\"8\":1}}],[\"postgres\",{\"1\":{\"8\":1}}],[\"post\",{\"1\":{\"8\":2,\"15\":2}}],[\"pcnfs\",{\"1\":{\"8\":1}}],[\"pc\",{\"1\":{\"8\":1}}],[\"proxy\",{\"1\":{\"8\":2}}],[\"get\",{\"1\":{\"8\":4}}],[\"head\",{\"1\":{\"8\":2}}],[\"http协议中post请求破解\",{\"0\":{\"15\":1}}],[\"https\",{\"1\":{\"8\":4}}],[\"http\",{\"1\":{\"8\":6,\"15\":2}}],[\"hydra是一个命令行工具\",{\"1\":{\"10\":1}}],[\"hydra是一个验证性质的工具\",{\"1\":{\"8\":1}}],[\"hydra\",{\"0\":{\"7\":1},\"1\":{\"8\":1,\"12\":1,\"13\":1,\"14\":4,\"15\":1}}],[\"f=incorrect\",{\"1\":{\"15\":1}}],[\"f\",{\"1\":{\"10\":4,\"15\":1}}],[\"file\",{\"1\":{\"10\":5}}],[\"firebird\",{\"1\":{\"8\":1}}],[\"format\",{\"1\":{\"10\":1}}],[\"form\",{\"1\":{\"8\":4,\"15\":2}}],[\"ftp破解\",{\"0\":{\"12\":1}}],[\"ftp\",{\"1\":{\"8\":1,\"12\":1}}],[\"ftp等服务\",{\"1\":{\"8\":1}}],[\"aa\",{\"1\":{\"12\":1,\"13\":1,\"14\":2}}],[\"aaa\",{\"1\":{\"8\":1}}],[\"allen\",{\"1\":{\"12\":1}}],[\"auth\",{\"1\":{\"8\":1}}],[\"anywhere\",{\"1\":{\"8\":1}}],[\"afp\",{\"1\":{\"8\":1}}],[\"c\",{\"1\":{\"10\":2}}],[\"charset\",{\"1\":{\"10\":1}}],[\"cvs\",{\"1\":{\"8\":1}}],[\"cisco启用\",{\"1\":{\"8\":1}}],[\"cisco身份验证\",{\"1\":{\"8\":1}}],[\"cisco\",{\"1\":{\"8\":1}}],[\"crypto\",{\"0\":{\"1\":1}}],[\"目前该工具支持以下协议的爆破\",{\"1\":{\"8\":1}}],[\"目录\",{\"0\":{\"4\":1,\"17\":1,\"19\":1}}],[\"主要目的是\",{\"1\":{\"8\":1}}],[\"它是由著名的黑客组织thc开发的一款开源暴力破解工具\",{\"1\":{\"8\":1}}],[\"m批量扫描\",{\"1\":{\"10\":1}}],[\"m\",{\"1\":{\"10\":1}}],[\"markdown\",{\"1\":{\"17\":1,\"19\":1}}],[\"max\",{\"1\":{\"10\":1}}],[\"mac平台安装\",{\"1\":{\"8\":1}}],[\"min\",{\"1\":{\"10\":1}}],[\"misc\",{\"0\":{\"2\":1}}],[\"mysql破解\",{\"0\":{\"13\":1}}],[\"mysql\",{\"1\":{\"8\":1,\"13\":1}}],[\"ms\",{\"1\":{\"8\":1}}],[\"支持linux\",{\"1\":{\"8\":1}}],[\"支持多种服务协议的账号和密码进行爆破\",{\"1\":{\"8\":1}}],[\"数据库\",{\"1\":{\"8\":1}}],[\"包括web登录\",{\"1\":{\"8\":1}}],[\"是一款非常强大的暴力破解工具\",{\"1\":{\"8\":1}}],[\"俗称九头蛇\",{\"1\":{\"8\":1}}],[\"简介\",{\"0\":{\"8\":1}}],[\"w\",{\"1\":{\"10\":2}}],[\"windows\",{\"1\":{\"8\":1}}],[\"web\",{\"0\":{\"6\":1}}],[\"whoami\",{\"0\":{\"0\":1}}],[\"御剑的简介\",{\"0\":{\"21\":1}}],[\"御剑\",{\"0\":{\"20\":1},\"1\":{\"5\":1}}],[\"这里有常用的工具的使用方法和简介\",{\"1\":{\"3\":1,\"16\":1,\"18\":1}}],[\"这里是web做题记录\",{\"1\":{\"6\":1}}],[\"这里是misc做题记录\",{\"1\":{\"2\":1}}],[\"这里是crypto做题记录\",{\"1\":{\"1\":1}}],[\"工具\",{\"0\":{\"3\":1}}],[\"来自ccsfu\",{\"1\":{\"0\":1}}],[\"一个ctfer\",{\"1\":{\"0\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map
