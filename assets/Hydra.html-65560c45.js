import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as a,f as n}from"./app-9dd7fe6d.js";const s={},r=n(`<h1 id="hydra" tabindex="-1"><a class="header-anchor" href="#hydra" aria-hidden="true">#</a> Hydra</h1><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><p>Hydra，俗称九头蛇，是一款非常强大的暴力破解工具，支持多种服务协议的账号和密码进行爆破，包括Web登录、数据库、SSH、FTP等服务，支持Linux、Windows、Mac平台安装。</p><p>它是由著名的黑客组织THC开发的一款开源暴力破解工具。Hydra是一个验证性质的工具，主要目的是：展示安全研究人员从远程获取一个系统认证权限。</p><p>目前该工具支持以下协议的爆破：</p><blockquote><p>AFP，Cisco AAA，Cisco身份验证，Cisco启用，CVS，Firebird，FTP，HTTP-FORM-GET，HTTP-FORM-POST，HTTP-GET，HTTP-HEAD，HTTP-PROXY，HTTPS-FORM- GET，HTTPS-FORM-POST，HTTPS-GET，HTTPS-HEAD，HTTP-Proxy，ICQ，IMAP，IRC，LDAP，MS-SQL，MYSQL，NCP，NNTP，Oracle Listener，Oracle SID，Oracle，PC-Anywhere， PCNFS，POP3，POSTGRES，RDP，Rexec，Rlogin，Rsh，SAP / R3，SIP，SMB，SMTP，SMTP枚举，SNMP，SOCKS5，SSH（v1和v2），Subversion，Teamspeak（TS2），Telnet，VMware-Auth ，VNC和XMPP。</p></blockquote><h2 id="基本使用" tabindex="-1"><a class="header-anchor" href="#基本使用" aria-hidden="true">#</a> 基本使用</h2><h3 id="常见参数" tabindex="-1"><a class="header-anchor" href="#常见参数" aria-hidden="true">#</a> 常见参数</h3><p>Hydra是一个命令行工具，所有的操作都是通过命令和参数实现的，如下就是最常见的Hydra暴力破解的参数：</p><table><thead><tr><th style="text-align:center;">选项</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">-R</td><td style="text-align:center;">继续上一次破解</td></tr><tr><td style="text-align:center;">-I</td><td style="text-align:center;">忽略现有还原文件（不等待10秒）</td></tr><tr><td style="text-align:center;">-s PORT</td><td style="text-align:center;">指定默认端口</td></tr><tr><td style="text-align:center;">-l LOGIN</td><td style="text-align:center;">指定破解登录用户名</td></tr><tr><td style="text-align:center;">-L FILE</td><td style="text-align:center;">使用文件指定多个用户名</td></tr><tr><td style="text-align:center;">-p PASS</td><td style="text-align:center;">指定密码</td></tr><tr><td style="text-align:center;">-P FILE</td><td style="text-align:center;">指定密码字典</td></tr><tr><td style="text-align:center;">-x MIN:MAX:CHARSET</td><td style="text-align:center;">密码暴力生成</td></tr><tr><td style="text-align:center;">-y</td><td style="text-align:center;">禁止在暴力破解中使用符号</td></tr><tr><td style="text-align:center;">-r</td><td style="text-align:center;">对选项-x使用非随机方法</td></tr><tr><td style="text-align:center;">-e nsr</td><td style="text-align:center;">n：空密码试探，s：使用指定用户和密码试探。</td></tr><tr><td style="text-align:center;">-u</td><td style="text-align:center;">循环用户</td></tr><tr><td style="text-align:center;">-C FILE</td><td style="text-align:center;">冒号分隔用户名密码：“login:pass” 格式</td></tr><tr><td style="text-align:center;">-M FILE</td><td style="text-align:center;">要攻击的服务器列表，每行一个条目，’:&#39;指定端口</td></tr><tr><td style="text-align:center;">-o FILE</td><td style="text-align:center;">将找到的登录/密码写入文件</td></tr><tr><td style="text-align:center;">-b FORMAT</td><td style="text-align:center;">指定-o输出格式，默认text,可选json, jsonv1</td></tr><tr><td style="text-align:center;">-f / -F</td><td style="text-align:center;">找到用户名/密码后中止破解，-f:每个主机，-F：所有</td></tr><tr><td style="text-align:center;">-t TASKS</td><td style="text-align:center;">每个主机并行线程数，默认16</td></tr><tr><td style="text-align:center;">-T TASKS</td><td style="text-align:center;">所有并行线程数，默认64</td></tr><tr><td style="text-align:center;">-w / -W TIME</td><td style="text-align:center;">最大等待响应时间</td></tr><tr><td style="text-align:center;">-c TIME</td><td style="text-align:center;">所有进程每次尝试登录等待时间</td></tr><tr><td style="text-align:center;">-4 / -6</td><td style="text-align:center;">IPv4(默认)/IPv6地址</td></tr><tr><td style="text-align:center;">-v / -V / -d</td><td style="text-align:center;">详细日志模式/每次尝试仅显示用户名密码/调试模式</td></tr><tr><td style="text-align:center;">-k</td><td style="text-align:center;">不重做失败的尝试（适用于-M批量扫描）</td></tr><tr><td style="text-align:center;">-q</td><td style="text-align:center;">不要打印错误连接消息</td></tr><tr><td style="text-align:center;">-U</td><td style="text-align:center;">服务模块详细使用信息</td></tr></tbody></table><h3 id="案例" tabindex="-1"><a class="header-anchor" href="#案例" aria-hidden="true">#</a> 案例</h3><h4 id="ftp破解" tabindex="-1"><a class="header-anchor" href="#ftp破解" aria-hidden="true">#</a> ftp破解</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>hydra  <span class="token parameter variable">-l</span> allen <span class="token parameter variable">-P</span> e:<span class="token punctuation">\\</span>aa.txt ftp://127.0.0.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="mysql破解" tabindex="-1"><a class="header-anchor" href="#mysql破解" aria-hidden="true">#</a> mysql破解</h4><p>-e nsr :指定可以尝试空密码。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>hydra <span class="token parameter variable">-l</span> root <span class="token parameter variable">-P</span> e:<span class="token punctuation">\\</span>aa.txt <span class="token parameter variable">-e</span> nsr <span class="token number">127.0</span>.0.1 mysql 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="ssh破解" tabindex="-1"><a class="header-anchor" href="#ssh破解" aria-hidden="true">#</a> ssh破解</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>hydra <span class="token parameter variable">-l</span> root <span class="token parameter variable">-p</span> <span class="token number">123456</span> <span class="token number">120.26</span>.12.53 <span class="token function">ssh</span>
hydra <span class="token parameter variable">-l</span> root <span class="token parameter variable">-p</span> <span class="token number">123456</span> ssh://120.26.12.53
hydra <span class="token parameter variable">-l</span> root <span class="token parameter variable">-P</span> e:<span class="token punctuation">\\</span>aa.txt <span class="token parameter variable">-e</span> nsr ssh://120.26.12.53
hydra <span class="token parameter variable">-l</span> root <span class="token parameter variable">-P</span> e:<span class="token punctuation">\\</span>aa.txt <span class="token parameter variable">-e</span> nsr <span class="token parameter variable">-vV</span> ssh://120.26.12.53
// -v参数显示详细的暴力破解的过程。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="http协议中post请求破解" tabindex="-1"><a class="header-anchor" href="#http协议中post请求破解" aria-hidden="true">#</a> HTTP协议中POST请求破解</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>hydra <span class="token parameter variable">-l</span> <span class="token operator">&lt;</span>username<span class="token operator">&gt;</span> <span class="token parameter variable">-P</span> <span class="token operator">&lt;</span>wordlist<span class="token operator">&gt;</span> <span class="token number">10.10</span>.146.53 http-post-form <span class="token string">&quot;/:username=^USER^&amp;password=^PASS^:F=incorrect&quot;</span> <span class="token parameter variable">-V</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>选项解释：</p><ul><li>-l 　　　　 指定单个的用户名</li><li>-L 用户名文件</li><li>-p 密码列表文件</li><li>http-post-form 输入提交表单的格式以及字段的名称</li><li>F 用户名密码错误时返回页面的含有的词汇</li></ul>`,22),l=[r];function d(i,c){return e(),a("div",null,l)}const h=t(s,[["render",d],["__file","Hydra.html.vue"]]);export{h as default};
